---
/* import { app } from "../firebase/server";
import { getAuth } from "firebase-admin/auth";

const auth = getAuth(app);
if (Astro.cookies.has("session")) {
  const sessionCookie = Astro.cookies.get("session")?.value;

  if (!sessionCookie) {
    console.log("No session cookie, raro");
    return;
  }
  const decodedCookie = await auth.verifySessionCookie(sessionCookie);

  if (decodedCookie) {
    return Astro.redirect("/");
  }
} */
---

<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="description" content="Astro description" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href="/faviconPuntoES.svg" />
    <meta name="generator" content={Astro.generator} />
    <title>Iniciar Sesión Con PuntoES</title>
  </head>
  <body>
    <main class="h-screen w-screen flex items-center">
      <div class="flex-1 flex flex-col gap-10 px-8 min-w-96"> <!-- Primer bloque -->
        <h2 class="text-4xl font-semibold">Bienvenido de vuelta!</h2>
        <h3 class="text-2xl">
          Inicia sesión para ver las últimas novedades de tu escuela
        </h3>
      </div>

      <div class="flex-1 px-4"><!-- Segundo Bloque -->
        <form id="sign-in-form" class="flex flex-col justify-center max-w-md">
          <label for="email">Email</label>
          <input
            type="email"
            name="email"
            placeholder="Introduzca su email"
            required
            class="border p-2 border-niceGray rounded-md mb-3"
            maxlength="30"
          />

          <label for="password">Contraseña</label>
          <input
            type="password"
            name="password"
            placeholder="Introduzca su contraseña"
            required
            class="border p-2 border-niceGray rounded-md mb-5"
            maxlength="30"
          />

          <div id="error-place-holder" class="hidden mb-3 text-red-500"></div>

          <button type="submit" class="py-2 bg-primary rounded-lg text-white"
            >Iniciar sesión</button
          >
        </form>

        <div class="mt-5 px-8">
          <p>No tenes una cuenta todavia? No te preocupes.</p>
          <a href="/registrarse" class="text-link hover:underline"
            >Registrate acá</a
          >
        </div>
      </div>
    </main>
  </body>

  <script>
    import {
      getAuth,
      inMemoryPersistence,
      signInWithEmailAndPassword,
      type AuthError,
    } from "@firebase/auth";
    import { auth } from "../services/firebase/client";
    import { removeExtraSpaces } from "../lib/utils";

    
    const errorPlaceHolder = document.getElementById("error-place-holder");
    const form = document.getElementById("sign-in-form") as HTMLFormElement;

    auth.setPersistence(inMemoryPersistence);

    form.addEventListener("submit", async (e) => {
      e.preventDefault();

      if (errorPlaceHolder !== null) {
        errorPlaceHolder.innerHTML = "";
      }

      const formData = new FormData(form);
      const email = removeExtraSpaces(formData.get("email")?.toString());
      const password = removeExtraSpaces(formData.get("password")?.toString());

      const p = document.createElement("p");

      if (!email || !password) {
        p.textContent = "Rellene todos los campos.";
        errorPlaceHolder?.classList.remove("hidden");
        return errorPlaceHolder?.appendChild(p);
      } else if (password.length < 8) {
        p.textContent = "Su contraseña necesita tener al menos 8 carácteres";
        errorPlaceHolder?.classList.remove("hidden");
        return errorPlaceHolder?.appendChild(p);
      }

      try {
        const userCredential = await signInWithEmailAndPassword(
          auth,
          email,
          password
        );

        const idToken = await userCredential.user.getIdToken();
        const response = await fetch("/api/auth/signin", {
          method: "GET",
          headers: {
            Authorization: `Bearer ${idToken}`,
          },
        });

        if (response.redirected) {
          console.log("Respesta, salio todo nazi", response);
          window.location.assign(response.url);
        }
      } catch (error) {
        if (error instanceof Error) {
          const errorCode = (error as AuthError).code.toString();

          switch (errorCode) {
            case "auth/invalid-email":
              p.textContent =
                "La dirección de correo electrónico no es válida.";
              break;

            case "auth/invalid-password":
              p.textContent =
                "La contraseña es muy débil. Debe tener al menos 8 carácteres.";
              break;

            case "auth/user-not-found":
              p.textContent =
                "No se encontró ningun usuario con este correo de electrónico.";
              break;

            case "auth/invalid-credential":
              p.textContent =
                "La dirección de correo electrónico o la contraseña no coinciden.";
              break;

            case "auth/too-many-requests":
              p.textContent = "Demasiados intentos, intente más tarde.";
              break;

            default:
              p.textContent = "Algo ha salido mal, vuelva a intentar.";
              break;
          }
          
          errorPlaceHolder?.classList.remove("hidden");
          errorPlaceHolder?.appendChild(p);
          console.log(errorCode);
        }
      }
    });
  </script>
</html>
